[versions]
agp = "8.8.2"
datastorePreferences = "1.1.6"
firebaseBom = "33.13.0"
glanceAppwidget = "1.1.1"
koinBom = "4.0.2"
kotlin = "2.0.21"
coreKtx = "1.16.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
kotlinxCoroutines = "1.8.1"
lifecycleRuntimeKtx = "2.9.0"
activityCompose = "1.10.1"
composeBom = "2025.05.01"
ksp = "2.0.21-1.0.28"
koin-annotations = "2.0.0-RC1"
playServicesWearable = "19.0.0"
startupRuntime = "1.2.0"
wearComposeMaterial = "1.0.0-alpha37"
compose-icon-ext = "1.7.8"
wearCompose = "1.5.0-beta01"
wearToolingPreview = "1.0.0"
coreSplashscreen = "1.0.1"
tiles = "1.5.0-beta02"
tilesMaterial = "1.5.0-beta02"
tilesTooling = "1.5.0-beta02"
tilesToolingPreview = "1.5.0-beta02"
horologistComposeTools = "0.6.17"
horologistTiles = "0.6.17"
watchfaceComplicationsDataSourceKtx = "1.2.1"
appcompat = "1.7.0"
composeMaterial = "1.12.0"
runtimeAndroid = "1.8.2"
uiTooling = "1.8.2"
wearPhoneInteractions = "1.1.0"
workRuntimeKtx = "2.10.1"
firebaseCrashlytics = "19.4.3"
googleGmsGoogleServices = "4.4.2"
googleFirebaseCrashlytics = "3.0.3"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-glance = { module = "androidx.glance:glance", version.ref = "glanceAppwidget" }
androidx-glance-appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "glanceAppwidget" }
androidx-glance-material3 = { module = "androidx.glance:glance-material3", version.ref = "glanceAppwidget" }
androidx-glance-preview = { module = "androidx.glance:glance-preview", version.ref = "glanceAppwidget" }
androidx-glance-appwidget-preview = { module = "androidx.glance:glance-appwidget-preview", version.ref = "glanceAppwidget" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
# TODO - charliesbot
# Delete the hardcoded version once Material 3 expressive is stable.
# I am hardcoding the version to force getting the alpha, but usually it comes from the BOM.
# So android-material3 shouldn't have a version property explicitly defined.
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose-icon-ext" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-icon-ext" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3", version = "1.4.0-alpha15" }
# End TODO
koin-android = { module = "io.insert-koin:koin-android" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-core-coroutines = { module = "io.insert-koin:koin-core-coroutines" }
kotlinx-coroutines-bom = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core" }           # version comes from the BOM
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-ksp = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }
play-services-wearable = { group = "com.google.android.gms", name = "play-services-wearable", version.ref = "playServicesWearable" }
androidx-compose-material = { group = "androidx.wear.compose", name = "compose-material3", version.ref = "wearComposeMaterial" }
androidx-compose-foundation = { group = "androidx.wear.compose", name = "compose-foundation", version.ref = "wearCompose" }
androidx-wear-tooling-preview = { group = "androidx.wear", name = "wear-tooling-preview", version.ref = "wearToolingPreview" }
androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "coreSplashscreen" }
androidx-tiles = { group = "androidx.wear.tiles", name = "tiles", version.ref = "tiles" }
androidx-tiles-material = { group = "androidx.wear.tiles", name = "tiles-material", version.ref = "tilesMaterial" }
androidx-tiles-tooling = { group = "androidx.wear.tiles", name = "tiles-tooling", version.ref = "tilesTooling" }
androidx-tiles-tooling-preview = { group = "androidx.wear.tiles", name = "tiles-tooling-preview", version.ref = "tilesToolingPreview" }
horologist-compose-tools = { group = "com.google.android.horologist", name = "horologist-compose-tools", version.ref = "horologistComposeTools" }
horologist-tiles = { group = "com.google.android.horologist", name = "horologist-tiles", version.ref = "horologistTiles" }
androidx-watchface-complications-data-source-ktx = { group = "androidx.wear.watchface", name = "watchface-complications-data-source-ktx", version.ref = "watchfaceComplicationsDataSourceKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "composeMaterial" }
androidx-runtime-android = { group = "androidx.compose.runtime", name = "runtime-android", version.ref = "runtimeAndroid" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "uiTooling" }
androidx-wear-phone-interactions = { group = "androidx.wear", name = "wear-phone-interactions", version.ref = "wearPhoneInteractions" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics", version.ref = "firebaseCrashlytics" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
android-library = { id = "com.android.library", version.ref = "agp" }
google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleGmsGoogleServices" }
google-firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "googleFirebaseCrashlytics" }


